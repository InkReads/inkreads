rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow user profile operations
    match /users/{userId} {
      allow read: if true;  // Anyone can read user profiles
      allow create: if true;  // Allow creating user profiles during signup
      allow update: if request.auth != null 
        && request.auth.uid == userId;  // Users can update their own profile
    }

    // Allow access to book votes collection and its documents
    match /bookVotes/{bookId} {
      allow read: if true;  // Anyone can read vote counts
      allow create: if true;  // Allow creating initial vote documents
      allow update: if request.auth != null;  // Only authenticated users can update votes
      
      // Allow access to nested collections and documents
      match /{document=**} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }
    
    match /reviewVotes/{reviewId} {
      allow read: if true;  // Anyone can read vote counts
      allow create: if true;  // Allow creating initial vote documents
      allow update: if request.auth != null;  // Only authenticated users can update votes
      
      // Allow access to nested collections and documents
      match /{document=**} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }

    // Allow access to reviews collection
    match /reviews/{reviewId} {
      allow read: if true;  // Anyone can read reviews
      allow create: if request.auth != null;  // Only authenticated users can create reviews
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.userId;  // Users can only modify their own reviews
    }

    // Base rules for other collections
    match /{document=**} {
      allow read: if true;  // Allow reading of all documents
      allow write: if request.auth != null;  // Require auth for writing
    }
  }
} 